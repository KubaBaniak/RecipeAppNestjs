version: 2.1
orbs:
  github-super-linter: circleci/github-super-linter@1.0.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cimg/node:18.16.0
    - image: cimg/postgres:14.1

commands:
  install_dependencies:
    steps:
      - run:
          name: Install node dependencies
          command: npm install
  setup_prisma:
    steps:
      - run:
          name: Generate prisma model
          command: npx prisma generate
      - run:
          name: Generate and apply migration
          command: npx prisma migrate dev
  setup_docker_compose:
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Run images of services declared in docker-compose.yml
          command: docker-compose up -d

jobs:
  build:
    <<: *defaults
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          key: ${CACHE_VERSION}-deps-{{ checksum "package-lock.json" }}
      - install_dependencies
      - save_cache:
          paths:
            - './node_modules'
          key: ${CACHE_VERSION}-deps-{{ checksum "package-lock.json" }}

  unit_test:
    <<: *defaults
    resource_class: medium
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          key: ${CACHE_VERSION}-deps-{{ checksum "package-lock.json" }}
      - setup_prisma
      - setup_docker_compose
      - run:
          name: Run unit tests
          command: |
            UNIT_TEST_FILES=$(circleci tests glob "./src/*/*{spec}.ts" | circleci tests split --split-by=timings)
            npm test -- $UNIT_TEST_FILES
      - store_test_results:
          path: ./test_reports

  e2e_test:
    <<: *defaults
    resource_class: medium
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          key: ${CACHE_VERSION}-deps-{{ checksum "package-lock.json" }}
      - setup_prisma
      - setup_docker_compose
      - run:
          name: Run e2e tests
          command: |
            E2E_TEST_FILES=$(circleci tests glob "./test/*{e2e-spec}.ts" | circleci tests split --split-by=timings)
            npm test -- $E2E_TEST_FILES --config ./test/jest-e2e.json 
      - store_test_results:
          path: ./test_reports

  deploy:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - install_dependencies
      - run: echo "!TODO"

workflows:
  build_and_test:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - e2e_test:
          requires:
            - build
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: main
